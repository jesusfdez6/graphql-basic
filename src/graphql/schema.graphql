 type Query {
        product(id:ID!): Product,
        products:[Product!]!
        category(id:ID!): Category
    }
 type Mutation{
    addProduct(product: ProductDto!): Product!
    updateProduct(id:ID!, product:ProductUpdateDto!): Product
    deleteProduct(id:ID!):ID
    login(email:EmailAddress!,password:String!):AuthResponse
    addCategory(category:CategoryDto): Category!
 }   
    
type Product {
        id : ID!
        name : String!
        price: Float!
        description:String!
        image:String!
        createAt: String!
        categoryId: ID!
        category: Category!
    }

type Category{
    id:ID!
    name:String!
    image:String!
    products:[Product]
}
type AuthResponse{

access_token:String!
user:User
}

type  User{
    id: ID!
    email: String!
    role: String!
    createdAt:String!
}

input ProductDto{
    name : String!
    price: Float!
    description:String!
    image:String!
    categoryId:ID!
}

input ProductUpdateDto{
    name : String
    price: Float
    description:String
    image:String
    categoryId:ID
}

input CategoryDto{
    name : categoryNameType!
    image:URL!
}

scalar categoryNameType